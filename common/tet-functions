
############################################################################
#                                                                          #
#                       tc-ext-tools shell environment                     #
#                                                                          #
############################################################################

#
#  This program is free software; you can redistribute it and/or modify
#  it under the terms of the GNU General Public License as published by
#  the Free Software Foundation; either version 2 of the License, or
#  (at your option) any later version.
#
#  This program is distributed in the hope that it will be useful,
#  but WITHOUT ANY WARRANTY; without even the implied warranty of
#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#  GNU General Public License for more details.
#
#  You should have received a copy of the GNU General Public License
#  along with this program.  If not, see <http://www.gnu.org/licenses/>.
#
#  Copyright (c) 2011 Sercan Arslan <arslanserc@gmail.com>
#

export TET_PACKAGES_DATABASE="${HOME}/.local/share/tet/packages_db"

_tet_common() {

   if [ -f "$HOME/.config/tet.conf" ]; then
        . "$HOME/.config/tet.conf"
   else
        echo "$tc-ext-tools user configuration not found"
        return 1
   fi

   if [ ! -d "$TET_PACKAGES_DATABASE" ]; then
        echo "You need to run update-tet-database at least once before using tet functions"
        return 1
   fi

   PACKAGE="$1"

   [ -f "$TET_PACKAGES_DATABASE/$PACKAGE" ] && shift

   ARGS="$@"

}

_tet_check_for_package() {

   if [ -f common ]; then
        . common
        PACKAGE_ROOT="$PWD"
   elif [ -f "$TET_PACKAGES_DATABASE/$PACKAGE" ]; then
        . "$TET_PACKAGES_DATABASE/$PACKAGE"
        . "$PACKAGE_ROOT/common"
   else
        echo "$this: No such package $PACKAGE"
        return 1
   fi

}

_tet_check_for_package_root() {

   if [ ! -d "$PACKAGE_ROOT" ]; then
        echo "$this: The package $PACKAGE root directory $PACKAGE_ROOT does not exist"
        return 1
   fi

}

_tet_package_required() {

   if [ -z "$PACKAGE" -a ! -f common ]; then
        echo "$this: You must specify the package"
        return 1
   fi

}

is_integer() {

    [ "$1" -eq "$1" ] > /dev/null 2>&1
    return $?

}

# tc-ext-tools cd: change directory to package root
tetcd() {

   this=tetcd

   _tet_common "$@" || return 1

   if [ -z "$PACKAGE" ]; then
        cd "$TET_PACKAGES"
        return 0
   fi

   _tet_check_for_package || return 1

   _tet_check_for_package_root || return 1

   cd "$PACKAGE_ROOT"

}

# tc-ext-tools ls: list package contents
tetls() {

   this=tetls

   _tet_common "$@" || return 1

   if [ -z "$PACKAGE" ]; then
        ls "$TET_PACKAGES_DATABASE"
        return 0
   fi

   _tet_check_for_package || return 1

   _tet_check_for_package_root || return 1

   cd "$PACKAGE_ROOT"
   ls $ARGS
   cd - > /dev/null

}

# tc-ext-tools find: find in package
tetfind() {

   this=tetfind

   _tet_common "$@" || return 1

   if [ -z "$PACKAGE" ]; then
        find "$TET_PACKAGES" -not -path "*.svn*"
        return 0
   fi

   _tet_check_for_package || return 1

   _tet_check_for_package_root || return 1

   cd "$PACKAGE_ROOT"
   find $ARGS -not -path "*.svn*"
   cd - > /dev/null

}

# tc-ext-tools edit: edit package files
teted() {

    this=teted

   _tet_common "$@" || return 1

   _tet_package_required || return 1

   _tet_check_for_package || return 1

   _tet_check_for_package_root || return 1

   if [ -z "$TET_EDITOR" ]; then
        echo "$this: You need to set the tc-ext-tools editor in your configuration file"
        return 1
   fi

   if ! which "$TET_EDITOR" >/dev/null 2>&1; then
        echo "$this: The text editor $TET_EDITOR not found"
        return 1
   fi

   if [ -z "$ARGS" ]; then
        FILES=`find $PACKAGE_ROOT -type f -a -not -path "*.svn*"`
   else
        unset FILES
        for FILE in $ARGS
        do
           FILES="$(find $PACKAGE_ROOT -type f -a -not -path "*.svn*" -name $FILE) $FILES"
        done
   fi

   file_cnt=0
   for i in $FILES
   do
      file_cnt=`expr $file_cnt + 1`
   done

   if [ $file_cnt = 0 ]; then
        echo "$this: No such file(s)"
        return 1
   elif [ $file_cnt = 1 ]; then
        $TET_EDITOR $FILES &
   else
        echo "$this: More than one file found"
        echo "Choose one of the options below"
        echo "[0]: quit"
        echo "[1]: all"

        index=1
        for i in $FILES
        do
            index=`expr $index + 1`
            echo "[$index]: ${i#$PACKAGE_ROOT/}"
        done

        read ans
        if ! is_integer $ans; then
            echo "$this: bad number"
            return 1
        elif [ $ans -gt $index -o $ans -lt 0 ]; then
            echo "$this: invalid option"
            return 1
        fi

        if [ $ans = 0 ]; then
             return 0
        elif [ $ans = 1 ]; then
             for FILE in $FILES
             do
                 $TET_EDITOR $FILE &
             done
        else
            index=1
            for FILE in $FILES
            do
                index=`expr $index + 1`
                if [ $ans = $index ]; then
                     $TET_EDITOR $FILE &
                     return 0
                fi
            done
        fi
   fi

}

# tc-ext-tools browse: browse the package in your file manager
tetbrowse() {

   this=tetbrowse

   _tet_common "$@" || return 1

   if [ -z "$PACKAGE" ]; then
        $TET_FILE_MANAGER "$TET_PACKAGES" &
        return 0
   fi

   _tet_check_for_package || return 1

   _tet_check_for_package_root || return 1

   if [ -z "$TET_FILE_MANAGER" ]; then
        echo "$this: You need to set the tc-ext-tools file manager in your configuration file"
        return 1
   fi

   if ! which "$TET_FILE_MANAGER" >/dev/null 2>&1; then
        echo "$this: The file manager $TET_FILE_MANAGER not found"
        return 1
   fi

   $TET_FILE_MANAGER "$PACKAGE_ROOT" &

}

# tc-ext-tools info: show info about the package
tetinfo() {

   this=tetinfo

   _tet_common "$@" || return 1

   _tet_package_required || return 1

   _tet_check_for_package || return 1

   _tet_check_for_package_root || return 1

   echo "------------------------------------------------------"
   echo "The package $PACKAGE has the following properties"
   echo "------------------------------------------------------"

   cd "$PACKAGE_ROOT"

   unset EXTENSIONS
   for EXTENSION in $(find extensions -type f -name install)
   do
       EXTENSIONS="$(basename ${EXTENSION%/install}) $EXTENSIONS"
   done

   cat common
   echo "EXTENSIONS=$EXTENSIONS"

   cd - > /dev/null
}

# tc-ext-tools www: open the package site in your web browser
tetwww() {

   this=tetwww

   _tet_common "$@" || return 1

   _tet_package_required || return 1

   _tet_check_for_package || return 1

   _tet_check_for_package_root || return 1

   if [ -z "$TET_WEB_BROWSER" ]; then
        echo "$this: You need to set the tc-ext-tools web browser in your configuration file"
        return 1
   fi

   if ! which "$TET_WEB_BROWSER" >/dev/null 2>&1; then
        echo "$this: The web browser $TET_WEB_BROWSER not found"
        return 1
   fi

   $TET_WEB_BROWSER "$SITE" &

}

